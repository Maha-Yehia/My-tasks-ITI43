@page "/newTrainee"

<h3>NewTrainee</h3>

@code {
    [Parameter]
    public int TraineeID { get; set; }
    public Trainee newTraine { get; set; }

    protected bool Saved;

    //used to show state of form
    protected string StatusClass;
    protected string Msg;

    protected override Task OnInitializedAsync()
    {
        newTraine = new Trainee { TraineeID = MockContext.Trainees.Count + 1 , TrackID = 1, BirthDate = DateTime.Now};
        return base.OnInitializedAsync();
    }

    protected void HandleValidSubmit()
    {
        MockContext.Trainees.Add(newTraine);

        StatusClass = "alert-success";
        Msg = "New Employee Add Successfully...";
        Saved = true;
    }

    protected void HandleInvalidSubmit()
    {
        StatusClass = "alert-danger";
        Msg = "There are some validation Errors. Please try again...";
    }
}

@if (!Saved)
{
    <EditForm Model="@newTraine" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">

        <DataAnnotationsValidator></DataAnnotationsValidator>

        <ValidationSummary></ValidationSummary>

        <div class="form-group row">
            <label for="Name" class="col-form-label">Name: </label>
            <InputText id="Name" class="form-control" @bind-Value="@newTraine.Name" placeholder="Enter first name"></InputText>
            <ValidationMessage For="@(() => newTraine.Name)" />
        </div>


        <div class="form-group row">
            <label for="birthdate" class="col-form-label">Birthdate: </label>
            <InputDate id="birthdate" class="form-control" @bind-Value="@newTraine.BirthDate" placeholder="Enter birthdate"></InputDate>

        </div>
        <div class="form-group row">
            <label for="email" class="col-form-label">Email: </label>
            <InputText id="email" class="form-control" @bind-Value="@newTraine.Email" placeholder="Enter email"></InputText>
            <ValidationMessage For="@(() => newTraine.Email)" />
        </div>

        <div class="form-group row">
            <label for="track" class="col-form-label">Track: </label>
            <InputSelect id="track" class="form-control" @bind-Value="@newTraine.TrackID">
                @foreach (var track in @MockContext.Tracks)
                {
                    <option value="@track.TrackID">@track.Name</option>
                }
            </InputSelect>
        </div>

        <div class="form-group row">
            <label for="phonenumber" class="col-form-label">Phone number: </label>
            <InputText id="phonenumber" class="form-control" @bind-Value="@newTraine.MobileNo" placeholder="Enter phone number"></InputText>
        </div>

        <div class="form-group row">
            <label for="gender" class="col-form-label">Gender: </label>
            <InputSelect id="gender" class="form-control" @bind-Value=@newTraine.Gender>
                <option value="@(Gender.Male)">Male</option>
                <option value="@(Gender.Female)">Female</option>
            </InputSelect>
        </div>

        <div class="form-group row">
            <label class="col-form-label"> IsGraduated </label>
            <div class="col-md-9">
                <div class="form-check form-check-inline">
                    <InputCheckbox id="IsGraduated" class="form-check-input" @bind-Value="@newTraine.IsGraduated" />
                </div>
            </div>
        </div>


        <button type="submit" class="btn btn-primary">Save Trainee</button>

    </EditForm>
}
else
{
    <div class="@StatusClass">
        @Msg
        <a href="/getalltrainees">Back to List</a>
    </div>

    @*<p>You have successfully saved the trainee. <a href="/">Go to home page</a></p>*@
}
